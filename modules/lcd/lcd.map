Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_udivmodhi4.o)
                              lcd.o (__udivmodhi4)
/usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/crtm2560.o (exit)
/usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_copy_data.o)
                              app.o (__do_copy_data)
/usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_clear_bss.o)
                              lcd.o (__do_clear_bss)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libc.a(vsnprintf.o)
                              lcd.o (vsnprintf)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libc.a(vfprintf_std.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libc.a(vsnprintf.o) (vfprintf)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libc.a(strnlen_P.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libc.a(vfprintf_std.o) (strnlen_P)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libc.a(strnlen.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libc.a(vfprintf_std.o) (strnlen)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libc.a(fputc.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libc.a(vfprintf_std.o) (fputc)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libc.a(ultoa_invert.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libc.a(vfprintf_std.o) (__ultoa_invert)

Allocating common symbols
Common symbol       size              file

million             0x2               lcd.o
temp                0x2               lcd.o
tens                0x2               lcd.o
hundred             0x2               lcd.o
unit                0x2               lcd.o
thousand            0x2               lcd.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000100000 xr
data             0x0000000000800200 0x000000000000fe00 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800200
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/crtm2560.o
LOAD lcd.o
LOAD app.o
START GROUP
LOAD /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libc.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0xa76
 *(.vectors)
 .vectors       0x0000000000000000       0xe4 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/crtm2560.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000000000000e4                . = ALIGN (0x2)
                0x00000000000000e4                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000000000000e4        0x0 linker stubs
 *(.trampolines*)
                0x00000000000000e4                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000000000000e4                __ctors_start = .
 *(.ctors)
                0x00000000000000e4                __ctors_end = .
                0x00000000000000e4                __dtors_start = .
 *(.dtors)
                0x00000000000000e4                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000000000000e4        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/crtm2560.o
                0x00000000000000e4                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000000000000e4       0x10 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/crtm2560.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000000000000f4       0x1a /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_copy_data.o)
                0x00000000000000f4                __do_copy_data
 .init4         0x000000000000010e       0x10 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_clear_bss.o)
                0x000000000000010e                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000000000000011e        0x8 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/crtm2560.o
 *(.init9)
 *(.text)
 .text          0x0000000000000126        0x4 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/crtm2560.o
                0x0000000000000126                __vector_38
                0x0000000000000126                __vector_22
                0x0000000000000126                __vector_28
                0x0000000000000126                __vector_1
                0x0000000000000126                __vector_32
                0x0000000000000126                __vector_34
                0x0000000000000126                __vector_24
                0x0000000000000126                __vector_12
                0x0000000000000126                __vector_55
                0x0000000000000126                __vector_46
                0x0000000000000126                __bad_interrupt
                0x0000000000000126                __vector_6
                0x0000000000000126                __vector_31
                0x0000000000000126                __vector_35
                0x0000000000000126                __vector_39
                0x0000000000000126                __vector_3
                0x0000000000000126                __vector_23
                0x0000000000000126                __vector_30
                0x0000000000000126                __vector_45
                0x0000000000000126                __vector_25
                0x0000000000000126                __vector_11
                0x0000000000000126                __vector_54
                0x0000000000000126                __vector_13
                0x0000000000000126                __vector_17
                0x0000000000000126                __vector_19
                0x0000000000000126                __vector_56
                0x0000000000000126                __vector_7
                0x0000000000000126                __vector_49
                0x0000000000000126                __vector_41
                0x0000000000000126                __vector_43
                0x0000000000000126                __vector_27
                0x0000000000000126                __vector_5
                0x0000000000000126                __vector_33
                0x0000000000000126                __vector_47
                0x0000000000000126                __vector_52
                0x0000000000000126                __vector_37
                0x0000000000000126                __vector_4
                0x0000000000000126                __vector_44
                0x0000000000000126                __vector_51
                0x0000000000000126                __vector_9
                0x0000000000000126                __vector_2
                0x0000000000000126                __vector_21
                0x0000000000000126                __vector_15
                0x0000000000000126                __vector_36
                0x0000000000000126                __vector_29
                0x0000000000000126                __vector_40
                0x0000000000000126                __vector_8
                0x0000000000000126                __vector_26
                0x0000000000000126                __vector_48
                0x0000000000000126                __vector_14
                0x0000000000000126                __vector_53
                0x0000000000000126                __vector_10
                0x0000000000000126                __vector_50
                0x0000000000000126                __vector_16
                0x0000000000000126                __vector_18
                0x0000000000000126                __vector_20
                0x0000000000000126                __vector_42
 .text          0x000000000000012a      0x324 lcd.o
                0x000000000000012a                lcd_port_config
                0x0000000000000138                lcd_port_init
                0x000000000000013c                lcd_init_devices
                0x0000000000000146                lcd_set_4bit
                0x00000000000001ce                lcd_wr_command
                0x0000000000000218                lcd_init
                0x0000000000000240                lcd_wr_char
                0x000000000000028a                lcd_home
                0x0000000000000290                lcd_string
                0x00000000000002ce                lcd_printf
                0x0000000000000312                lcd_cursor
                0x000000000000033e                lcd_print
 .text          0x000000000000044e        0x0 app.o
 .text          0x000000000000044e        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_udivmodhi4.o)
 .text          0x000000000000044e        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_exit.o)
 .text          0x000000000000044e        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_copy_data.o)
 .text          0x000000000000044e        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_clear_bss.o)
 .text          0x000000000000044e        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libc.a(vsnprintf.o)
 .text          0x000000000000044e        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libc.a(vfprintf_std.o)
 .text          0x000000000000044e        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libc.a(strnlen_P.o)
 .text          0x000000000000044e        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libc.a(strnlen.o)
 .text          0x000000000000044e        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libc.a(fputc.o)
 .text          0x000000000000044e        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libc.a(ultoa_invert.o)
                0x000000000000044e                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x000000000000044e       0x48 app.o
                0x000000000000044e                main
 .text.libgcc.mul
                0x0000000000000496        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_udivmodhi4.o)
 .text.libgcc.div
                0x0000000000000496       0x28 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_udivmodhi4.o)
                0x0000000000000496                __udivmodhi4
 .text.libgcc   0x00000000000004be        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_udivmodhi4.o)
 .text.libgcc.prologue
                0x00000000000004be        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_udivmodhi4.o)
 .text.libgcc.builtins
                0x00000000000004be        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_udivmodhi4.o)
 .text.libgcc.fmul
                0x00000000000004be        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_udivmodhi4.o)
 .text.libgcc.fixed
                0x00000000000004be        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_udivmodhi4.o)
 .text.libgcc.mul
                0x00000000000004be        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_exit.o)
 .text.libgcc.div
                0x00000000000004be        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_exit.o)
 .text.libgcc   0x00000000000004be        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x00000000000004be        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x00000000000004be        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x00000000000004be        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x00000000000004be        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x00000000000004be        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x00000000000004be        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_copy_data.o)
 .text.libgcc   0x00000000000004be        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x00000000000004be        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x00000000000004be        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x00000000000004be        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x00000000000004be        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x00000000000004be        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x00000000000004be        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_clear_bss.o)
 .text.libgcc   0x00000000000004be        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x00000000000004be        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x00000000000004be        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x00000000000004be        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x00000000000004be        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_clear_bss.o)
 .text.avr-libc
                0x00000000000004be       0x72 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libc.a(vsnprintf.o)
                0x00000000000004be                vsnprintf
 .text.avr-libc
                0x0000000000000530      0x3f6 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libc.a(vfprintf_std.o)
                0x0000000000000530                vfprintf
 .text.avr-libc
                0x0000000000000926       0x16 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libc.a(strnlen_P.o)
                0x0000000000000926                strnlen_P
 .text.avr-libc
                0x000000000000093c       0x16 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libc.a(strnlen.o)
                0x000000000000093c                strnlen
 .text.avr-libc
                0x0000000000000952       0x64 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libc.a(fputc.o)
                0x0000000000000952                fputc
 .text.avr-libc
                0x00000000000009b6       0xbc /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libc.a(ultoa_invert.o)
                0x00000000000009b6                __ultoa_invert
                0x0000000000000a72                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000000a72        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_exit.o)
                0x0000000000000a72                exit
                0x0000000000000a72                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000000a72        0x4 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_exit.o)
 *(.fini0)
                0x0000000000000a76                _etext = .

.data           0x0000000000800200        0xe load address 0x0000000000000a76
                0x0000000000800200                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800200        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/crtm2560.o
 .data          0x0000000000800200        0x0 lcd.o
 .data          0x0000000000800200        0x0 app.o
 .data          0x0000000000800200        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_udivmodhi4.o)
 .data          0x0000000000800200        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_exit.o)
 .data          0x0000000000800200        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_copy_data.o)
 .data          0x0000000000800200        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_clear_bss.o)
 .data          0x0000000000800200        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libc.a(vsnprintf.o)
 .data          0x0000000000800200        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libc.a(vfprintf_std.o)
 .data          0x0000000000800200        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libc.a(strnlen_P.o)
 .data          0x0000000000800200        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libc.a(strnlen.o)
 .data          0x0000000000800200        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libc.a(fputc.o)
 .data          0x0000000000800200        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libc.a(ultoa_invert.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 .rodata.str1.1
                0x0000000000800200        0xd app.o
 *(.gnu.linkonce.d*)
                0x000000000080020e                . = ALIGN (0x2)
 *fill*         0x000000000080020d        0x1 
                0x000000000080020e                _edata = .
                0x000000000080020e                PROVIDE (__data_end, .)

.bss            0x000000000080020e        0xc
                0x000000000080020e                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x000000000080020e        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/crtm2560.o
 .bss           0x000000000080020e        0x0 lcd.o
 .bss           0x000000000080020e        0x0 app.o
 .bss           0x000000000080020e        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_udivmodhi4.o)
 .bss           0x000000000080020e        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_exit.o)
 .bss           0x000000000080020e        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_copy_data.o)
 .bss           0x000000000080020e        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_clear_bss.o)
 .bss           0x000000000080020e        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libc.a(vsnprintf.o)
 .bss           0x000000000080020e        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libc.a(vfprintf_std.o)
 .bss           0x000000000080020e        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libc.a(strnlen_P.o)
 .bss           0x000000000080020e        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libc.a(strnlen.o)
 .bss           0x000000000080020e        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libc.a(fputc.o)
 .bss           0x000000000080020e        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libc.a(ultoa_invert.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x000000000080020e        0xc lcd.o
                0x000000000080020e                million
                0x0000000000800210                temp
                0x0000000000800212                tens
                0x0000000000800214                hundred
                0x0000000000800216                unit
                0x0000000000800218                thousand
                0x000000000080021a                PROVIDE (__bss_end, .)
                0x0000000000000a76                __data_load_start = LOADADDR (.data)
                0x0000000000000a84                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x000000000080021a        0x0
                0x000000000080021a                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x000000000080021a                PROVIDE (__noinit_end, .)
                0x000000000080021a                _end = .
                0x000000000080021a                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab           0x0000000000000000     0x3324
 *(.stab)
 .stab          0x0000000000000000      0x6e4 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/crtm2560.o
 .stab          0x00000000000006e4      0xec4 lcd.o
                                        0xed0 (size before relaxing)
 .stab          0x00000000000015a8      0x378 app.o
                                        0x540 (size before relaxing)
 .stab          0x0000000000001920      0x558 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libc.a(vsnprintf.o)
                                        0x588 (size before relaxing)
 .stab          0x0000000000001e78      0xba0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libc.a(vfprintf_std.o)
                                        0xd80 (size before relaxing)
 .stab          0x0000000000002a18       0x9c /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libc.a(strnlen_P.o)
                                         0xa8 (size before relaxing)
 .stab          0x0000000000002ab4       0x9c /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libc.a(strnlen.o)
                                         0xa8 (size before relaxing)
 .stab          0x0000000000002b50      0x354 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libc.a(fputc.o)
                                        0x534 (size before relaxing)
 .stab          0x0000000000002ea4      0x480 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libc.a(ultoa_invert.o)
                                        0x48c (size before relaxing)

.stabstr        0x0000000000000000     0x1613
 *(.stabstr)
 .stabstr       0x0000000000000000     0x1613 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/crtm2560.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 lcd.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000000       0x12 app.o
 .comment       0x0000000000000000       0x12 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libc.a(vsnprintf.o)
 .comment       0x0000000000000000       0x12 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libc.a(vfprintf_std.o)
 .comment       0x0000000000000000       0x12 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libc.a(fputc.o)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(app.out elf32-avr)
LOAD linker stubs
