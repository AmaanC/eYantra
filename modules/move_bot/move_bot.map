Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/crtm2560.o (exit)
/usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_copy_data.o)
                              move_bot.o (__do_copy_data)
/usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_clear_bss.o)
                              move_bot.o (__do_clear_bss)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(divsf3.o)
                              move_bot.o (__divsf3)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(divsf3x.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(divsf3.o) (__divsf3x)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(fixunssfsi.o)
                              move_bot.o (__fixunssfsi)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(floatsisf.o)
                              move_bot.o (__floatunsisf)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(fp_inf.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(divsf3x.o) (__fp_inf)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(fp_nan.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(divsf3x.o) (__fp_nan)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(fp_pscA.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(divsf3x.o) (__fp_pscA)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(fp_pscB.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(divsf3x.o) (__fp_pscB)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(fp_round.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(divsf3.o) (__fp_round)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(fp_split3.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(divsf3x.o) (__fp_split3)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(fp_zero.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(fixunssfsi.o) (__fp_zero)

Allocating common symbols
Common symbol       size              file

Degrees             0x2               ../pos_encoder/pos_encoder.o
degrees             0x2               move_bot.o
ADC_value           0x1               move_bot.o
ADC_Value           0x1               ../bl_sensor/bl_sensor.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000100000 xr
data             0x0000000000800200 0x000000000000fe00 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800200
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/crtm2560.o
LOAD move_bot.o
LOAD app.o
LOAD ../bl_sensor/bl_sensor.o
LOAD ../pos_encoder/pos_encoder.o
LOAD ../custom_delay/custom_delay.o
START GROUP
LOAD /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libc.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x9b6
 *(.vectors)
 .vectors       0x0000000000000000       0xe4 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/crtm2560.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000000000000e4                . = ALIGN (0x2)
                0x00000000000000e4                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000000000000e4        0x0 linker stubs
 *(.trampolines*)
                0x00000000000000e4                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000000000000e4                __ctors_start = .
 *(.ctors)
                0x00000000000000e4                __ctors_end = .
                0x00000000000000e4                __dtors_start = .
 *(.dtors)
                0x00000000000000e4                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000000000000e4        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/crtm2560.o
                0x00000000000000e4                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000000000000e4       0x10 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/crtm2560.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000000000000f4       0x1a /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_copy_data.o)
                0x00000000000000f4                __do_copy_data
 .init4         0x000000000000010e       0x10 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_clear_bss.o)
                0x000000000000010e                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000000000000011e        0x8 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/crtm2560.o
 *(.init9)
 *(.text)
 .text          0x0000000000000126        0x4 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/crtm2560.o
                0x0000000000000126                __vector_38
                0x0000000000000126                __vector_22
                0x0000000000000126                __vector_28
                0x0000000000000126                __vector_1
                0x0000000000000126                __vector_32
                0x0000000000000126                __vector_34
                0x0000000000000126                __vector_24
                0x0000000000000126                __vector_12
                0x0000000000000126                __vector_55
                0x0000000000000126                __vector_46
                0x0000000000000126                __bad_interrupt
                0x0000000000000126                __vector_31
                0x0000000000000126                __vector_35
                0x0000000000000126                __vector_39
                0x0000000000000126                __vector_3
                0x0000000000000126                __vector_23
                0x0000000000000126                __vector_30
                0x0000000000000126                __vector_45
                0x0000000000000126                __vector_25
                0x0000000000000126                __vector_11
                0x0000000000000126                __vector_54
                0x0000000000000126                __vector_13
                0x0000000000000126                __vector_17
                0x0000000000000126                __vector_19
                0x0000000000000126                __vector_56
                0x0000000000000126                __vector_7
                0x0000000000000126                __vector_49
                0x0000000000000126                __vector_41
                0x0000000000000126                __vector_43
                0x0000000000000126                __vector_27
                0x0000000000000126                __vector_33
                0x0000000000000126                __vector_47
                0x0000000000000126                __vector_52
                0x0000000000000126                __vector_37
                0x0000000000000126                __vector_4
                0x0000000000000126                __vector_44
                0x0000000000000126                __vector_51
                0x0000000000000126                __vector_9
                0x0000000000000126                __vector_2
                0x0000000000000126                __vector_21
                0x0000000000000126                __vector_15
                0x0000000000000126                __vector_36
                0x0000000000000126                __vector_29
                0x0000000000000126                __vector_40
                0x0000000000000126                __vector_8
                0x0000000000000126                __vector_26
                0x0000000000000126                __vector_48
                0x0000000000000126                __vector_14
                0x0000000000000126                __vector_53
                0x0000000000000126                __vector_10
                0x0000000000000126                __vector_50
                0x0000000000000126                __vector_16
                0x0000000000000126                __vector_18
                0x0000000000000126                __vector_20
                0x0000000000000126                __vector_42
 .text          0x000000000000012a      0x162 move_bot.o
                0x000000000000012a                MoveBotInitDevices
                0x0000000000000136                IsBlack
                0x000000000000014a                AngleRotate
                0x0000000000000240                RotateBot
 .text          0x000000000000028c        0x0 app.o
 .text          0x000000000000028c       0xb0 ../bl_sensor/bl_sensor.o
                0x000000000000028c                BlSensorAdcPinConfig
                0x000000000000029a                BlSensorPortInit
                0x000000000000029e                BlSensorTimer5Init
                0x00000000000002d4                BlSensorAdcInit
                0x00000000000002ee                BlSensorAdcConversion
                0x0000000000000326                BlSensorGet
                0x000000000000032a                BlSensorInitDevices
 .text          0x000000000000033c      0x3e2 ../pos_encoder/pos_encoder.o
                0x000000000000033c                PosEncoderMotionPinConfig
                0x000000000000035e                LeftEncoderPinConfig
                0x0000000000000364                RightEncoderPinConfig
                0x000000000000036a                PosEncoderPortInit
                0x0000000000000376                LeftPositionEncoderInterruptInit
                0x0000000000000388                RightPositionEncoderInterruptInit
                0x000000000000039a                PosEncoderTimer5Init
                0x00000000000003d0                __vector_6
                0x000000000000041a                __vector_5
                0x0000000000000464                PosEncoderMotionSet
                0x0000000000000470                PosEncoderVelocity
                0x000000000000047a                PosEncoderForward
                0x0000000000000480                PosEncoderBack
                0x0000000000000486                PosEncoderLeft
                0x000000000000048c                PosEncoderRight
                0x0000000000000492                PosEncoderSoftLeft
                0x0000000000000498                PosEncoderSoftRight
                0x000000000000049e                PosEncoderSoftLeft2
                0x00000000000004a4                PosEncoderSoftRight2
                0x00000000000004aa                PosEncoderStop
                0x00000000000004b0                PosEncoderAngleRotate
                0x0000000000000530                PosEncoderLinearDistanceMm
                0x00000000000005ba                PosEncoderForwardMm
                0x00000000000005de                PosEncoderBackMm
                0x0000000000000602                PosEncoderLeftDegrees
                0x0000000000000626                PosEncoderRightDegrees
                0x000000000000064a                PosEncoderSoftLeftDegrees
                0x0000000000000662                PosEncoderSoftRightDegrees
                0x000000000000067a                PosEncoderSoftLeft2Degrees
                0x0000000000000692                PosEncoderSoftRight2Degrees
                0x00000000000006aa                PosEncoderInitDevices
                0x00000000000006bc                PosEncoderRotateBot
                0x00000000000006d6                ResetRightShaft
                0x00000000000006e8                ResetLeftShaft
                0x00000000000006fa                GetShaftCountRight
                0x000000000000070c                GetShaftCountLeft
 .text          0x000000000000071e       0x16 ../custom_delay/custom_delay.o
                0x000000000000071e                CustomDelay
 .text          0x0000000000000734        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_exit.o)
 .text          0x0000000000000734        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_copy_data.o)
 .text          0x0000000000000734        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_clear_bss.o)
 .text          0x0000000000000734        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(divsf3.o)
 .text          0x0000000000000734        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(divsf3x.o)
 .text          0x0000000000000734        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(fixunssfsi.o)
 .text          0x0000000000000734        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(floatsisf.o)
 .text          0x0000000000000734        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(fp_inf.o)
 .text          0x0000000000000734        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(fp_nan.o)
 .text          0x0000000000000734        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(fp_pscA.o)
 .text          0x0000000000000734        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(fp_pscB.o)
 .text          0x0000000000000734        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(fp_round.o)
 .text          0x0000000000000734        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(fp_split3.o)
 .text          0x0000000000000734        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(fp_zero.o)
                0x0000000000000734                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x0000000000000734       0x3a app.o
                0x0000000000000734                main
 .text.libgcc.mul
                0x000000000000076e        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_exit.o)
 .text.libgcc.div
                0x000000000000076e        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_exit.o)
 .text.libgcc   0x000000000000076e        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x000000000000076e        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x000000000000076e        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x000000000000076e        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x000000000000076e        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x000000000000076e        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x000000000000076e        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_copy_data.o)
 .text.libgcc   0x000000000000076e        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x000000000000076e        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x000000000000076e        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x000000000000076e        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x000000000000076e        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x000000000000076e        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x000000000000076e        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_clear_bss.o)
 .text.libgcc   0x000000000000076e        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x000000000000076e        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x000000000000076e        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x000000000000076e        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x000000000000076e        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_clear_bss.o)
 .text.avr-libc.fplib
                0x000000000000076e        0x4 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(divsf3.o)
                0x000000000000076e                __divsf3
 .text.avr-libc.fplib
                0x0000000000000772       0xcc /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(divsf3x.o)
                0x0000000000000788                __divsf3x
                0x000000000000078c                __divsf3_pse
 .text.avr-libc.fplib
                0x000000000000083e       0x58 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(fixunssfsi.o)
                0x000000000000083e                __fixunssfsi
 .text.avr-libc.fplib
                0x0000000000000896       0x7a /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(floatsisf.o)
                0x0000000000000896                __floatunsisf
                0x000000000000089a                __floatsisf
 .text.avr-libc.fplib
                0x0000000000000910        0xc /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(fp_inf.o)
                0x0000000000000910                __fp_inf
 .text.avr-libc.fplib
                0x000000000000091c        0x6 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(fp_nan.o)
                0x000000000000091c                __fp_nan
 .text.avr-libc.fplib
                0x0000000000000922        0xe /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(fp_pscA.o)
                0x0000000000000922                __fp_pscA
 .text.avr-libc.fplib
                0x0000000000000930        0xe /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(fp_pscB.o)
                0x0000000000000930                __fp_pscB
 .text.avr-libc.fplib
                0x000000000000093e       0x22 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(fp_round.o)
                0x000000000000093e                __fp_round
 .text.avr-libc.fplib
                0x0000000000000960       0x44 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(fp_split3.o)
                0x0000000000000960                __fp_split3
                0x0000000000000970                __fp_splitA
 .text.avr-libc.fplib
                0x00000000000009a4        0xe /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(fp_zero.o)
                0x00000000000009a4                __fp_zero
                0x00000000000009a6                __fp_szero
                0x00000000000009b2                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000000000009b2        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_exit.o)
                0x00000000000009b2                exit
                0x00000000000009b2                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000000000009b2        0x4 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_exit.o)
 *(.fini0)
                0x00000000000009b6                _etext = .

.data           0x0000000000800200        0x4 load address 0x00000000000009b6
                0x0000000000800200                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800200        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/crtm2560.o
 .data          0x0000000000800200        0x2 move_bot.o
                0x0000000000800200                low_velocity
                0x0000000000800201                high_velocity
 .data          0x0000000000800202        0x0 app.o
 .data          0x0000000000800202        0x0 ../bl_sensor/bl_sensor.o
 .data          0x0000000000800202        0x0 ../pos_encoder/pos_encoder.o
 .data          0x0000000000800202        0x0 ../custom_delay/custom_delay.o
 .data          0x0000000000800202        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_exit.o)
 .data          0x0000000000800202        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_copy_data.o)
 .data          0x0000000000800202        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_clear_bss.o)
 .data          0x0000000000800202        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(divsf3.o)
 .data          0x0000000000800202        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(divsf3x.o)
 .data          0x0000000000800202        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(fixunssfsi.o)
 .data          0x0000000000800202        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(floatsisf.o)
 .data          0x0000000000800202        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(fp_inf.o)
 .data          0x0000000000800202        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(fp_nan.o)
 .data          0x0000000000800202        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(fp_pscA.o)
 .data          0x0000000000800202        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(fp_pscB.o)
 .data          0x0000000000800202        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(fp_round.o)
 .data          0x0000000000800202        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(fp_split3.o)
 .data          0x0000000000800202        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(fp_zero.o)
 *(.data*)
 *(.rodata)
 .rodata        0x0000000000800202        0x2 move_bot.o
                0x0000000000800202                rotation_threshold
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800204                . = ALIGN (0x2)
                0x0000000000800204                _edata = .
                0x0000000000800204                PROVIDE (__data_end, .)

.bss            0x0000000000800204       0x15
                0x0000000000800204                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800204        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/crtm2560.o
 .bss           0x0000000000800204        0x3 move_bot.o
                0x0000000000800204                right_black_line
                0x0000000000800205                center_black_line
                0x0000000000800206                left_black_line
 .bss           0x0000000000800207        0x0 app.o
 .bss           0x0000000000800207        0x4 ../bl_sensor/bl_sensor.o
                0x0000000000800207                Right_black_line
                0x0000000000800208                Center_black_line
                0x0000000000800209                Left_black_line
                0x000000000080020a                flag
 .bss           0x000000000080020b        0x8 ../pos_encoder/pos_encoder.o
                0x000000000080020b                ShaftCountRight
                0x000000000080020f                ShaftCountLeft
 .bss           0x0000000000800213        0x0 ../custom_delay/custom_delay.o
 .bss           0x0000000000800213        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_exit.o)
 .bss           0x0000000000800213        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_copy_data.o)
 .bss           0x0000000000800213        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_clear_bss.o)
 .bss           0x0000000000800213        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(divsf3.o)
 .bss           0x0000000000800213        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(divsf3x.o)
 .bss           0x0000000000800213        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(fixunssfsi.o)
 .bss           0x0000000000800213        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(floatsisf.o)
 .bss           0x0000000000800213        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(fp_inf.o)
 .bss           0x0000000000800213        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(fp_nan.o)
 .bss           0x0000000000800213        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(fp_pscA.o)
 .bss           0x0000000000800213        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(fp_pscB.o)
 .bss           0x0000000000800213        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(fp_round.o)
 .bss           0x0000000000800213        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(fp_split3.o)
 .bss           0x0000000000800213        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(fp_zero.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x0000000000800213        0x3 move_bot.o
                0x0000000000800213                degrees
                0x0000000000800215                ADC_value
 COMMON         0x0000000000800216        0x1 ../bl_sensor/bl_sensor.o
                0x0000000000800216                ADC_Value
 COMMON         0x0000000000800217        0x2 ../pos_encoder/pos_encoder.o
                0x0000000000800217                Degrees
                0x0000000000800219                PROVIDE (__bss_end, .)
                0x00000000000009b6                __data_load_start = LOADADDR (.data)
                0x00000000000009ba                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800219        0x0
                0x0000000000800219                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0000000000800219                PROVIDE (__noinit_end, .)
                0x0000000000800219                _end = .
                0x0000000000800219                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab           0x0000000000000000     0x3cc0
 *(.stab)
 .stab          0x0000000000000000      0x6e4 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/crtm2560.o
 .stab          0x00000000000006e4      0x78c move_bot.o
                                        0x798 (size before relaxing)
 .stab          0x0000000000000e70      0x348 app.o
                                        0x510 (size before relaxing)
 .stab          0x00000000000011b8      0x684 ../bl_sensor/bl_sensor.o
                                        0x84c (size before relaxing)
 .stab          0x000000000000183c     0x1164 ../pos_encoder/pos_encoder.o
                                       0x132c (size before relaxing)
 .stab          0x00000000000029a0      0x33c ../custom_delay/custom_delay.o
                                        0x504 (size before relaxing)
 .stab          0x0000000000002cdc       0x48 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(divsf3.o)
                                         0x54 (size before relaxing)
 .stab          0x0000000000002d24      0x510 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(divsf3x.o)
                                        0x51c (size before relaxing)
 .stab          0x0000000000003234      0x240 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(fixunssfsi.o)
                                        0x24c (size before relaxing)
 .stab          0x0000000000003474      0x318 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(floatsisf.o)
                                        0x324 (size before relaxing)
 .stab          0x000000000000378c       0x78 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(fp_inf.o)
                                         0x84 (size before relaxing)
 .stab          0x0000000000003804       0x54 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(fp_nan.o)
                                         0x60 (size before relaxing)
 .stab          0x0000000000003858       0x84 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(fp_pscA.o)
                                         0x90 (size before relaxing)
 .stab          0x00000000000038dc       0x84 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(fp_pscB.o)
                                         0x90 (size before relaxing)
 .stab          0x0000000000003960       0xfc /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(fp_round.o)
                                        0x108 (size before relaxing)
 .stab          0x0000000000003a5c      0x1d4 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(fp_split3.o)
                                        0x1e0 (size before relaxing)
 .stab          0x0000000000003c30       0x90 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(fp_zero.o)
                                         0x9c (size before relaxing)

.stabstr        0x0000000000000000     0x166d
 *(.stabstr)
 .stabstr       0x0000000000000000     0x166d /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/crtm2560.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 move_bot.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000000       0x12 app.o
 .comment       0x0000000000000000       0x12 ../bl_sensor/bl_sensor.o
 .comment       0x0000000000000000       0x12 ../pos_encoder/pos_encoder.o
 .comment       0x0000000000000000       0x12 ../custom_delay/custom_delay.o

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(app.out elf32-avr)
LOAD linker stubs
