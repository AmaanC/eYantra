Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/crtm2560.o (exit)
/usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_copy_data.o)
                              move_bot.o (__do_copy_data)
/usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_clear_bss.o)
                              move_bot.o (__do_clear_bss)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(addsf3.o)
                              move_bot.o (__subsf3)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(addsf3x.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(addsf3.o) (__addsf3x)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(cmpsf2.o)
                              move_bot.o (__eqsf2)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(divsf3.o)
                              move_bot.o (__divsf3)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(divsf3x.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(divsf3.o) (__divsf3x)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(fixsfsi.o)
                              move_bot.o (__fixsfsi)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(fixunssfsi.o)
                              move_bot.o (__fixunssfsi)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(floatsisf.o)
                              move_bot.o (__floatunsisf)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(fp_cmp.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(cmpsf2.o) (__fp_cmp)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(fp_inf.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(addsf3x.o) (__fp_inf)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(fp_nan.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(addsf3x.o) (__fp_nan)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(fp_pscA.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(addsf3x.o) (__fp_pscA)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(fp_pscB.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(addsf3x.o) (__fp_pscB)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(fp_round.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(addsf3.o) (__fp_round)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(fp_split3.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(addsf3x.o) (__fp_split3)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(fp_zero.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(addsf3x.o) (__fp_zero)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(gesf2.o)
                              move_bot.o (__gesf2)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(mulsf3.o)
                              move_bot.o (__mulsf3)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(mulsf3x.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(mulsf3.o) (__mulsf3x)

Allocating common symbols
Common symbol       size              file

control             0x4               move_bot.o
Degrees             0x2               ../pos_encoder/pos_encoder.o
degrees             0x2               move_bot.o
ADC_value           0x1               move_bot.o
ADC_Value           0x1               ../bl_sensor/bl_sensor.o
prev_sensor         0x4               move_bot.o
sensor              0x4               move_bot.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000100000 xr
data             0x0000000000800200 0x000000000000fe00 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800200
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/crtm2560.o
LOAD move_bot.o
LOAD app.o
LOAD ../bl_sensor/bl_sensor.o
LOAD ../pos_encoder/pos_encoder.o
LOAD ../custom_delay/custom_delay.o
START GROUP
LOAD /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libc.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000     0x102e
 *(.vectors)
 .vectors       0x0000000000000000       0xe4 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/crtm2560.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000000000000e4                . = ALIGN (0x2)
                0x00000000000000e4                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000000000000e4        0x0 linker stubs
 *(.trampolines*)
                0x00000000000000e4                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000000000000e4                __ctors_start = .
 *(.ctors)
                0x00000000000000e4                __ctors_end = .
                0x00000000000000e4                __dtors_start = .
 *(.dtors)
                0x00000000000000e4                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000000000000e4        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/crtm2560.o
                0x00000000000000e4                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000000000000e4       0x10 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/crtm2560.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000000000000f4       0x1a /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_copy_data.o)
                0x00000000000000f4                __do_copy_data
 .init4         0x000000000000010e       0x10 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_clear_bss.o)
                0x000000000000010e                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000000000000011e        0x8 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/crtm2560.o
 *(.init9)
 *(.text)
 .text          0x0000000000000126        0x4 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/crtm2560.o
                0x0000000000000126                __vector_38
                0x0000000000000126                __vector_22
                0x0000000000000126                __vector_28
                0x0000000000000126                __vector_1
                0x0000000000000126                __vector_32
                0x0000000000000126                __vector_34
                0x0000000000000126                __vector_24
                0x0000000000000126                __vector_12
                0x0000000000000126                __vector_55
                0x0000000000000126                __vector_46
                0x0000000000000126                __bad_interrupt
                0x0000000000000126                __vector_31
                0x0000000000000126                __vector_35
                0x0000000000000126                __vector_39
                0x0000000000000126                __vector_3
                0x0000000000000126                __vector_23
                0x0000000000000126                __vector_30
                0x0000000000000126                __vector_45
                0x0000000000000126                __vector_25
                0x0000000000000126                __vector_11
                0x0000000000000126                __vector_54
                0x0000000000000126                __vector_13
                0x0000000000000126                __vector_17
                0x0000000000000126                __vector_19
                0x0000000000000126                __vector_56
                0x0000000000000126                __vector_7
                0x0000000000000126                __vector_49
                0x0000000000000126                __vector_41
                0x0000000000000126                __vector_43
                0x0000000000000126                __vector_27
                0x0000000000000126                __vector_33
                0x0000000000000126                __vector_47
                0x0000000000000126                __vector_52
                0x0000000000000126                __vector_37
                0x0000000000000126                __vector_4
                0x0000000000000126                __vector_44
                0x0000000000000126                __vector_51
                0x0000000000000126                __vector_9
                0x0000000000000126                __vector_2
                0x0000000000000126                __vector_21
                0x0000000000000126                __vector_15
                0x0000000000000126                __vector_36
                0x0000000000000126                __vector_29
                0x0000000000000126                __vector_40
                0x0000000000000126                __vector_8
                0x0000000000000126                __vector_26
                0x0000000000000126                __vector_48
                0x0000000000000126                __vector_14
                0x0000000000000126                __vector_53
                0x0000000000000126                __vector_10
                0x0000000000000126                __vector_50
                0x0000000000000126                __vector_16
                0x0000000000000126                __vector_18
                0x0000000000000126                __vector_20
                0x0000000000000126                __vector_42
 .text          0x000000000000012a      0x5e8 move_bot.o
                0x000000000000012a                MoveBotInitDevices
                0x0000000000000136                PidControl
                0x0000000000000258                IsBlack
                0x0000000000000268                ReadSensors
                0x000000000000034e                AngleRotate
                0x0000000000000440                RotateBot
                0x0000000000000486                MoveBot
                0x00000000000006ca                MoveBotForward
                0x00000000000006ee                MoveBotReverse
 .text          0x0000000000000712        0x0 app.o
 .text          0x0000000000000712       0xb0 ../bl_sensor/bl_sensor.o
                0x0000000000000712                BlSensorAdcPinConfig
                0x0000000000000720                BlSensorPortInit
                0x0000000000000724                BlSensorTimer5Init
                0x000000000000075a                BlSensorAdcInit
                0x0000000000000774                BlSensorAdcConversion
                0x00000000000007ac                BlSensorGet
                0x00000000000007b0                BlSensorInitDevices
 .text          0x00000000000007c2      0x3e2 ../pos_encoder/pos_encoder.o
                0x00000000000007c2                PosEncoderMotionPinConfig
                0x00000000000007e4                LeftEncoderPinConfig
                0x00000000000007ea                RightEncoderPinConfig
                0x00000000000007f0                PosEncoderPortInit
                0x00000000000007fc                LeftPositionEncoderInterruptInit
                0x000000000000080e                RightPositionEncoderInterruptInit
                0x0000000000000820                PosEncoderTimer5Init
                0x0000000000000856                __vector_6
                0x00000000000008a0                __vector_5
                0x00000000000008ea                PosEncoderMotionSet
                0x00000000000008f6                PosEncoderVelocity
                0x0000000000000900                PosEncoderForward
                0x0000000000000906                PosEncoderBack
                0x000000000000090c                PosEncoderLeft
                0x0000000000000912                PosEncoderRight
                0x0000000000000918                PosEncoderSoftLeft
                0x000000000000091e                PosEncoderSoftRight
                0x0000000000000924                PosEncoderSoftLeft2
                0x000000000000092a                PosEncoderSoftRight2
                0x0000000000000930                PosEncoderStop
                0x0000000000000936                PosEncoderAngleRotate
                0x00000000000009b6                PosEncoderLinearDistanceMm
                0x0000000000000a40                PosEncoderForwardMm
                0x0000000000000a64                PosEncoderBackMm
                0x0000000000000a88                PosEncoderLeftDegrees
                0x0000000000000aac                PosEncoderRightDegrees
                0x0000000000000ad0                PosEncoderSoftLeftDegrees
                0x0000000000000ae8                PosEncoderSoftRightDegrees
                0x0000000000000b00                PosEncoderSoftLeft2Degrees
                0x0000000000000b18                PosEncoderSoftRight2Degrees
                0x0000000000000b30                PosEncoderInitDevices
                0x0000000000000b42                PosEncoderRotateBot
                0x0000000000000b5c                ResetRightShaft
                0x0000000000000b6e                ResetLeftShaft
                0x0000000000000b80                GetShaftCountRight
                0x0000000000000b92                GetShaftCountLeft
 .text          0x0000000000000ba4       0x16 ../custom_delay/custom_delay.o
                0x0000000000000ba4                CustomDelay
 .text          0x0000000000000bba        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_exit.o)
 .text          0x0000000000000bba        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_copy_data.o)
 .text          0x0000000000000bba        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_clear_bss.o)
 .text          0x0000000000000bba        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(addsf3.o)
 .text          0x0000000000000bba        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(addsf3x.o)
 .text          0x0000000000000bba        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(cmpsf2.o)
 .text          0x0000000000000bba        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(divsf3.o)
 .text          0x0000000000000bba        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(divsf3x.o)
 .text          0x0000000000000bba        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(fixsfsi.o)
 .text          0x0000000000000bba        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(fixunssfsi.o)
 .text          0x0000000000000bba        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(floatsisf.o)
 .text          0x0000000000000bba        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(fp_cmp.o)
 .text          0x0000000000000bba        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(fp_inf.o)
 .text          0x0000000000000bba        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(fp_nan.o)
 .text          0x0000000000000bba        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(fp_pscA.o)
 .text          0x0000000000000bba        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(fp_pscB.o)
 .text          0x0000000000000bba        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(fp_round.o)
 .text          0x0000000000000bba        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(fp_split3.o)
 .text          0x0000000000000bba        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(fp_zero.o)
 .text          0x0000000000000bba        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(gesf2.o)
 .text          0x0000000000000bba        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(mulsf3.o)
 .text          0x0000000000000bba        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(mulsf3x.o)
                0x0000000000000bba                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x0000000000000bba       0x3a app.o
                0x0000000000000bba                main
 .text.libgcc.mul
                0x0000000000000bf4        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_exit.o)
 .text.libgcc.div
                0x0000000000000bf4        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000000bf4        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x0000000000000bf4        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x0000000000000bf4        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x0000000000000bf4        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x0000000000000bf4        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x0000000000000bf4        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x0000000000000bf4        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_copy_data.o)
 .text.libgcc   0x0000000000000bf4        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x0000000000000bf4        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x0000000000000bf4        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x0000000000000bf4        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x0000000000000bf4        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x0000000000000bf4        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x0000000000000bf4        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_clear_bss.o)
 .text.libgcc   0x0000000000000bf4        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x0000000000000bf4        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x0000000000000bf4        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x0000000000000bf4        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x0000000000000bf4        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_clear_bss.o)
 .text.avr-libc.fplib
                0x0000000000000bf4        0xa /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(addsf3.o)
                0x0000000000000bf4                __subsf3
                0x0000000000000bf6                __addsf3
 .text.avr-libc.fplib
                0x0000000000000bfe       0xc0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(addsf3x.o)
                0x0000000000000c18                __addsf3x
 .text.avr-libc.fplib
                0x0000000000000cbe        0x8 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(cmpsf2.o)
                0x0000000000000cbe                __lesf2
                0x0000000000000cbe                __nesf2
                0x0000000000000cbe                __eqsf2
                0x0000000000000cbe                __cmpsf2
                0x0000000000000cbe                __ltsf2
 .text.avr-libc.fplib
                0x0000000000000cc6        0x4 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(divsf3.o)
                0x0000000000000cc6                __divsf3
 .text.avr-libc.fplib
                0x0000000000000cca       0xcc /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(divsf3x.o)
                0x0000000000000ce0                __divsf3x
                0x0000000000000ce4                __divsf3_pse
 .text.avr-libc.fplib
                0x0000000000000d96        0xa /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(fixsfsi.o)
                0x0000000000000d96                __fixsfsi
 .text.avr-libc.fplib
                0x0000000000000da0       0x58 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(fixunssfsi.o)
                0x0000000000000da0                __fixunssfsi
 .text.avr-libc.fplib
                0x0000000000000df8       0x7a /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(floatsisf.o)
                0x0000000000000df8                __floatunsisf
                0x0000000000000dfc                __floatsisf
 .text.avr-libc.fplib
                0x0000000000000e72       0x48 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(fp_cmp.o)
                0x0000000000000e72                __fp_cmp
 .text.avr-libc.fplib
                0x0000000000000eba        0xc /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(fp_inf.o)
                0x0000000000000eba                __fp_inf
 .text.avr-libc.fplib
                0x0000000000000ec6        0x6 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(fp_nan.o)
                0x0000000000000ec6                __fp_nan
 .text.avr-libc.fplib
                0x0000000000000ecc        0xe /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(fp_pscA.o)
                0x0000000000000ecc                __fp_pscA
 .text.avr-libc.fplib
                0x0000000000000eda        0xe /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(fp_pscB.o)
                0x0000000000000eda                __fp_pscB
 .text.avr-libc.fplib
                0x0000000000000ee8       0x22 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(fp_round.o)
                0x0000000000000ee8                __fp_round
 .text.avr-libc.fplib
                0x0000000000000f0a       0x44 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(fp_split3.o)
                0x0000000000000f0a                __fp_split3
                0x0000000000000f1a                __fp_splitA
 .text.avr-libc.fplib
                0x0000000000000f4e        0xe /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(fp_zero.o)
                0x0000000000000f4e                __fp_zero
                0x0000000000000f50                __fp_szero
 .text.avr-libc.fplib
                0x0000000000000f5c        0x8 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(gesf2.o)
                0x0000000000000f5c                __gtsf2
                0x0000000000000f5c                __gesf2
 .text.avr-libc.fplib
                0x0000000000000f64        0x4 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(mulsf3.o)
                0x0000000000000f64                __mulsf3
 .text.avr-libc.fplib
                0x0000000000000f68       0xc2 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(mulsf3x.o)
                0x0000000000000f7c                __mulsf3x
                0x0000000000000f80                __mulsf3_pse
                0x000000000000102a                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000000000000102a        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_exit.o)
                0x000000000000102a                exit
                0x000000000000102a                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000000000000102a        0x4 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_exit.o)
 *(.fini0)
                0x000000000000102e                _etext = .

.data           0x0000000000800200       0x10 load address 0x000000000000102e
                0x0000000000800200                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800200        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/crtm2560.o
 .data          0x0000000000800200        0xe move_bot.o
                0x0000000000800200                d_gain
                0x0000000000800204                i_gain
                0x0000000000800208                p_gain
                0x000000000080020c                low_velocity
                0x000000000080020d                high_velocity
 .data          0x000000000080020e        0x0 app.o
 .data          0x000000000080020e        0x0 ../bl_sensor/bl_sensor.o
 .data          0x000000000080020e        0x0 ../pos_encoder/pos_encoder.o
 .data          0x000000000080020e        0x0 ../custom_delay/custom_delay.o
 .data          0x000000000080020e        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_exit.o)
 .data          0x000000000080020e        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_copy_data.o)
 .data          0x000000000080020e        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_clear_bss.o)
 .data          0x000000000080020e        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(addsf3.o)
 .data          0x000000000080020e        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(addsf3x.o)
 .data          0x000000000080020e        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(cmpsf2.o)
 .data          0x000000000080020e        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(divsf3.o)
 .data          0x000000000080020e        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(divsf3x.o)
 .data          0x000000000080020e        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(fixsfsi.o)
 .data          0x000000000080020e        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(fixunssfsi.o)
 .data          0x000000000080020e        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(floatsisf.o)
 .data          0x000000000080020e        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(fp_cmp.o)
 .data          0x000000000080020e        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(fp_inf.o)
 .data          0x000000000080020e        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(fp_nan.o)
 .data          0x000000000080020e        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(fp_pscA.o)
 .data          0x000000000080020e        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(fp_pscB.o)
 .data          0x000000000080020e        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(fp_round.o)
 .data          0x000000000080020e        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(fp_split3.o)
 .data          0x000000000080020e        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(fp_zero.o)
 .data          0x000000000080020e        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(gesf2.o)
 .data          0x000000000080020e        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(mulsf3.o)
 .data          0x000000000080020e        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(mulsf3x.o)
 *(.data*)
 *(.rodata)
 .rodata        0x000000000080020e        0x2 move_bot.o
                0x000000000080020e                rotation_threshold
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800210                . = ALIGN (0x2)
                0x0000000000800210                _edata = .
                0x0000000000800210                PROVIDE (__data_end, .)

.bss            0x0000000000800210       0x29
                0x0000000000800210                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800210        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/crtm2560.o
 .bss           0x0000000000800210        0xb move_bot.o
                0x0000000000800210                prev_error
                0x0000000000800214                integral_error
                0x0000000000800218                right_black_line
                0x0000000000800219                center_black_line
                0x000000000080021a                left_black_line
 .bss           0x000000000080021b        0x0 app.o
 .bss           0x000000000080021b        0x4 ../bl_sensor/bl_sensor.o
                0x000000000080021b                Right_black_line
                0x000000000080021c                Center_black_line
                0x000000000080021d                Left_black_line
                0x000000000080021e                flag
 .bss           0x000000000080021f        0x8 ../pos_encoder/pos_encoder.o
                0x000000000080021f                ShaftCountRight
                0x0000000000800223                ShaftCountLeft
 .bss           0x0000000000800227        0x0 ../custom_delay/custom_delay.o
 .bss           0x0000000000800227        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_exit.o)
 .bss           0x0000000000800227        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_copy_data.o)
 .bss           0x0000000000800227        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_clear_bss.o)
 .bss           0x0000000000800227        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(addsf3.o)
 .bss           0x0000000000800227        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(addsf3x.o)
 .bss           0x0000000000800227        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(cmpsf2.o)
 .bss           0x0000000000800227        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(divsf3.o)
 .bss           0x0000000000800227        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(divsf3x.o)
 .bss           0x0000000000800227        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(fixsfsi.o)
 .bss           0x0000000000800227        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(fixunssfsi.o)
 .bss           0x0000000000800227        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(floatsisf.o)
 .bss           0x0000000000800227        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(fp_cmp.o)
 .bss           0x0000000000800227        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(fp_inf.o)
 .bss           0x0000000000800227        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(fp_nan.o)
 .bss           0x0000000000800227        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(fp_pscA.o)
 .bss           0x0000000000800227        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(fp_pscB.o)
 .bss           0x0000000000800227        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(fp_round.o)
 .bss           0x0000000000800227        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(fp_split3.o)
 .bss           0x0000000000800227        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(fp_zero.o)
 .bss           0x0000000000800227        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(gesf2.o)
 .bss           0x0000000000800227        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(mulsf3.o)
 .bss           0x0000000000800227        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(mulsf3x.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x0000000000800227        0xf move_bot.o
                0x0000000000800227                control
                0x000000000080022b                degrees
                0x000000000080022d                ADC_value
                0x000000000080022e                prev_sensor
                0x0000000000800232                sensor
 COMMON         0x0000000000800236        0x1 ../bl_sensor/bl_sensor.o
                0x0000000000800236                ADC_Value
 COMMON         0x0000000000800237        0x2 ../pos_encoder/pos_encoder.o
                0x0000000000800237                Degrees
                0x0000000000800239                PROVIDE (__bss_end, .)
                0x000000000000102e                __data_load_start = LOADADDR (.data)
                0x000000000000103e                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800239        0x0
                0x0000000000800239                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0000000000800239                PROVIDE (__noinit_end, .)
                0x0000000000800239                _end = .
                0x0000000000800239                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab           0x0000000000000000     0x4f14
 *(.stab)
 .stab          0x0000000000000000      0x6e4 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/crtm2560.o
 .stab          0x00000000000006e4      0xc54 move_bot.o
                                        0xc60 (size before relaxing)
 .stab          0x0000000000001338      0x33c app.o
                                        0x504 (size before relaxing)
 .stab          0x0000000000001674      0x684 ../bl_sensor/bl_sensor.o
                                        0x84c (size before relaxing)
 .stab          0x0000000000001cf8     0x1164 ../pos_encoder/pos_encoder.o
                                       0x132c (size before relaxing)
 .stab          0x0000000000002e5c      0x33c ../custom_delay/custom_delay.o
                                        0x504 (size before relaxing)
 .stab          0x0000000000003198       0x78 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(addsf3.o)
                                         0x84 (size before relaxing)
 .stab          0x0000000000003210      0x4bc /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(addsf3x.o)
                                        0x4c8 (size before relaxing)
 .stab          0x00000000000036cc       0x90 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(cmpsf2.o)
                                         0x9c (size before relaxing)
 .stab          0x000000000000375c       0x48 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(divsf3.o)
                                         0x54 (size before relaxing)
 .stab          0x00000000000037a4      0x510 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(divsf3x.o)
                                        0x51c (size before relaxing)
 .stab          0x0000000000003cb4       0x6c /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(fixsfsi.o)
                                         0x78 (size before relaxing)
 .stab          0x0000000000003d20      0x240 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(fixunssfsi.o)
                                        0x24c (size before relaxing)
 .stab          0x0000000000003f60      0x318 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(floatsisf.o)
                                        0x324 (size before relaxing)
 .stab          0x0000000000004278      0x1e0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(fp_cmp.o)
                                        0x1ec (size before relaxing)
 .stab          0x0000000000004458       0x78 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(fp_inf.o)
                                         0x84 (size before relaxing)
 .stab          0x00000000000044d0       0x54 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(fp_nan.o)
                                         0x60 (size before relaxing)
 .stab          0x0000000000004524       0x84 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(fp_pscA.o)
                                         0x90 (size before relaxing)
 .stab          0x00000000000045a8       0x84 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(fp_pscB.o)
                                         0x90 (size before relaxing)
 .stab          0x000000000000462c       0xfc /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(fp_round.o)
                                        0x108 (size before relaxing)
 .stab          0x0000000000004728      0x1d4 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(fp_split3.o)
                                        0x1e0 (size before relaxing)
 .stab          0x00000000000048fc       0x90 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(fp_zero.o)
                                         0x9c (size before relaxing)
 .stab          0x000000000000498c       0x6c /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(gesf2.o)
                                         0x78 (size before relaxing)
 .stab          0x00000000000049f8       0x48 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(mulsf3.o)
                                         0x54 (size before relaxing)
 .stab          0x0000000000004a40      0x4d4 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a(mulsf3x.o)
                                        0x4e0 (size before relaxing)

.stabstr        0x0000000000000000     0x19a8
 *(.stabstr)
 .stabstr       0x0000000000000000     0x19a8 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/crtm2560.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 move_bot.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000000       0x12 app.o
 .comment       0x0000000000000000       0x12 ../bl_sensor/bl_sensor.o
 .comment       0x0000000000000000       0x12 ../pos_encoder/pos_encoder.o
 .comment       0x0000000000000000       0x12 ../custom_delay/custom_delay.o

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(app.out elf32-avr)
LOAD linker stubs
