Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_udivmodhi4.o)
                              ../lcd/lcd.o (__udivmodhi4)
/usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_divmodhi4.o)
                              ../seven_segment/seven_segment.o (__divmodhi4)
/usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/crtm2560.o (exit)
/usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_copy_data.o)
                              timer.o (__do_copy_data)
/usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_clear_bss.o)
                              timer.o (__do_clear_bss)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libc.a(vsnprintf.o)
                              ../lcd/lcd.o (vsnprintf)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libc.a(vfprintf_std.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libc.a(vsnprintf.o) (vfprintf)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libc.a(strnlen_P.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libc.a(vfprintf_std.o) (strnlen_P)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libc.a(strnlen.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libc.a(vfprintf_std.o) (strnlen)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libc.a(fputc.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libc.a(vfprintf_std.o) (fputc)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libc.a(ultoa_invert.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libc.a(vfprintf_std.o) (__ultoa_invert)

Allocating common symbols
Common symbol       size              file

million             0x2               ../lcd/lcd.o
temp                0x2               ../lcd/lcd.o
tens                0x2               ../lcd/lcd.o
hundred             0x2               ../lcd/lcd.o
unit                0x2               ../lcd/lcd.o
callback            0x2               timer.o
thousand            0x2               ../lcd/lcd.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000100000 xr
data             0x0000000000800200 0x000000000000fe00 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800200
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/crtm2560.o
LOAD timer.o
LOAD app.o
LOAD ../buzzer/buzzer.o
LOAD ../seven_segment/seven_segment.o
LOAD ../custom_delay/custom_delay.o
LOAD ../lcd/lcd.o
START GROUP
LOAD /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libc.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0xe5a
 *(.vectors)
 .vectors       0x0000000000000000       0xe4 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/crtm2560.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000000000000e4                . = ALIGN (0x2)
                0x00000000000000e4                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000000000000e4        0x4 linker stubs
 *(.trampolines*)
                0x00000000000000e8                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000000000000e8                __ctors_start = .
 *(.ctors)
                0x00000000000000e8                __ctors_end = .
                0x00000000000000e8                __dtors_start = .
 *(.dtors)
                0x00000000000000e8                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000000000000e8        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/crtm2560.o
                0x00000000000000e8                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000000000000e8       0x10 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/crtm2560.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000000000000f8       0x1a /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_copy_data.o)
                0x00000000000000f8                __do_copy_data
 .init4         0x0000000000000112       0x10 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_clear_bss.o)
                0x0000000000000112                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000000122        0x8 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/crtm2560.o
 *(.init9)
 *(.text)
 .text          0x000000000000012a        0x4 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/crtm2560.o
                0x000000000000012a                __vector_38
                0x000000000000012a                __vector_22
                0x000000000000012a                __vector_28
                0x000000000000012a                __vector_1
                0x000000000000012a                __vector_32
                0x000000000000012a                __vector_34
                0x000000000000012a                __vector_24
                0x000000000000012a                __vector_12
                0x000000000000012a                __vector_55
                0x000000000000012a                __vector_46
                0x000000000000012a                __bad_interrupt
                0x000000000000012a                __vector_6
                0x000000000000012a                __vector_31
                0x000000000000012a                __vector_39
                0x000000000000012a                __vector_3
                0x000000000000012a                __vector_23
                0x000000000000012a                __vector_30
                0x000000000000012a                __vector_45
                0x000000000000012a                __vector_25
                0x000000000000012a                __vector_11
                0x000000000000012a                __vector_54
                0x000000000000012a                __vector_13
                0x000000000000012a                __vector_17
                0x000000000000012a                __vector_19
                0x000000000000012a                __vector_56
                0x000000000000012a                __vector_7
                0x000000000000012a                __vector_49
                0x000000000000012a                __vector_41
                0x000000000000012a                __vector_43
                0x000000000000012a                __vector_27
                0x000000000000012a                __vector_5
                0x000000000000012a                __vector_33
                0x000000000000012a                __vector_47
                0x000000000000012a                __vector_52
                0x000000000000012a                __vector_37
                0x000000000000012a                __vector_4
                0x000000000000012a                __vector_44
                0x000000000000012a                __vector_51
                0x000000000000012a                __vector_9
                0x000000000000012a                __vector_2
                0x000000000000012a                __vector_21
                0x000000000000012a                __vector_15
                0x000000000000012a                __vector_36
                0x000000000000012a                __vector_29
                0x000000000000012a                __vector_40
                0x000000000000012a                __vector_8
                0x000000000000012a                __vector_26
                0x000000000000012a                __vector_48
                0x000000000000012a                __vector_14
                0x000000000000012a                __vector_53
                0x000000000000012a                __vector_10
                0x000000000000012a                __vector_16
                0x000000000000012a                __vector_18
                0x000000000000012a                __vector_20
                0x000000000000012a                __vector_42
 .text          0x000000000000012e      0x1e6 timer.o
                0x000000000000012e                Timer3Init
                0x000000000000016e                UpdateDisplay
                0x0000000000000190                __vector_35
                0x00000000000001d2                Timer5Init
                0x0000000000000212                __vector_50
                0x00000000000002a0                GetCallbackTime
                0x00000000000002aa                VictoryTime
                0x00000000000002b2                FreezeDisplay
                0x00000000000002c4                RegisterCallback
                0x00000000000002e8                GetCurrentTime
                0x00000000000002f2                ResetTime
                0x00000000000002fc                InitTimer
 .text          0x0000000000000314        0x0 app.o
 .text          0x0000000000000314       0x42 ../buzzer/buzzer.o
                0x0000000000000314                BuzzerPinConfig
                0x000000000000031a                BuzzerPortInit
                0x000000000000031e                BuzzerOn
                0x0000000000000326                BuzzerOff
                0x000000000000032e                BuzzerBeep
                0x000000000000034c                BuzzerInitDevices
 .text          0x0000000000000356      0x130 ../seven_segment/seven_segment.o
                0x0000000000000356                SevenSegmentPinConfig
                0x0000000000000368                SevenPortInit
                0x000000000000036c                SevenInitDevices
                0x0000000000000376                SevenConvertToHex
                0x0000000000000406                SevenDisplayNum
 .text          0x0000000000000486       0x16 ../custom_delay/custom_delay.o
                0x0000000000000486                CustomDelay
 .text          0x000000000000049c      0x33e ../lcd/lcd.o
                0x000000000000049c                LcdPortConfig
                0x00000000000004aa                LcdPortInit
                0x00000000000004ae                LcdInitDevices
                0x00000000000004b8                LcdSet4Bit
                0x0000000000000540                LcdWrCommand
                0x000000000000058a                LcdInit
                0x00000000000005ba                LcdWrChar
                0x0000000000000604                LcdHome
                0x000000000000060a                LcdString
                0x0000000000000648                LcdPrintf
                0x000000000000069e                LcdCursor
                0x00000000000006ca                LcdPrint
 .text          0x00000000000007da        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_udivmodhi4.o)
 .text          0x00000000000007da        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_divmodhi4.o)
 .text          0x00000000000007da        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_exit.o)
 .text          0x00000000000007da        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_copy_data.o)
 .text          0x00000000000007da        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_clear_bss.o)
 .text          0x00000000000007da        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libc.a(vsnprintf.o)
 .text          0x00000000000007da        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libc.a(vfprintf_std.o)
 .text          0x00000000000007da        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libc.a(strnlen_P.o)
 .text          0x00000000000007da        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libc.a(strnlen.o)
 .text          0x00000000000007da        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libc.a(fputc.o)
 .text          0x00000000000007da        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libc.a(ultoa_invert.o)
                0x00000000000007da                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x00000000000007da       0x78 app.o
                0x00000000000007da                main
 .text.libgcc.mul
                0x0000000000000852        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_udivmodhi4.o)
 .text.libgcc.div
                0x0000000000000852       0x28 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_udivmodhi4.o)
                0x0000000000000852                __udivmodhi4
 .text.libgcc   0x000000000000087a        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_udivmodhi4.o)
 .text.libgcc.prologue
                0x000000000000087a        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_udivmodhi4.o)
 .text.libgcc.builtins
                0x000000000000087a        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_udivmodhi4.o)
 .text.libgcc.fmul
                0x000000000000087a        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_udivmodhi4.o)
 .text.libgcc.fixed
                0x000000000000087a        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_udivmodhi4.o)
 .text.libgcc.mul
                0x000000000000087a        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_divmodhi4.o)
 .text.libgcc.div
                0x000000000000087a       0x28 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_divmodhi4.o)
                0x000000000000087a                __divmodhi4
                0x000000000000087a                _div
 .text.libgcc   0x00000000000008a2        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_divmodhi4.o)
 .text.libgcc.prologue
                0x00000000000008a2        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_divmodhi4.o)
 .text.libgcc.builtins
                0x00000000000008a2        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_divmodhi4.o)
 .text.libgcc.fmul
                0x00000000000008a2        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_divmodhi4.o)
 .text.libgcc.fixed
                0x00000000000008a2        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_divmodhi4.o)
 .text.libgcc.mul
                0x00000000000008a2        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_exit.o)
 .text.libgcc.div
                0x00000000000008a2        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_exit.o)
 .text.libgcc   0x00000000000008a2        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x00000000000008a2        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x00000000000008a2        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x00000000000008a2        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x00000000000008a2        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x00000000000008a2        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x00000000000008a2        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_copy_data.o)
 .text.libgcc   0x00000000000008a2        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x00000000000008a2        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x00000000000008a2        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x00000000000008a2        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x00000000000008a2        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x00000000000008a2        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x00000000000008a2        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_clear_bss.o)
 .text.libgcc   0x00000000000008a2        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x00000000000008a2        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x00000000000008a2        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x00000000000008a2        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x00000000000008a2        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_clear_bss.o)
 .text.avr-libc
                0x00000000000008a2       0x72 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libc.a(vsnprintf.o)
                0x00000000000008a2                vsnprintf
 .text.avr-libc
                0x0000000000000914      0x3f6 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libc.a(vfprintf_std.o)
                0x0000000000000914                vfprintf
 .text.avr-libc
                0x0000000000000d0a       0x16 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libc.a(strnlen_P.o)
                0x0000000000000d0a                strnlen_P
 .text.avr-libc
                0x0000000000000d20       0x16 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libc.a(strnlen.o)
                0x0000000000000d20                strnlen
 .text.avr-libc
                0x0000000000000d36       0x64 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libc.a(fputc.o)
                0x0000000000000d36                fputc
 .text.avr-libc
                0x0000000000000d9a       0xbc /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libc.a(ultoa_invert.o)
                0x0000000000000d9a                __ultoa_invert
                0x0000000000000e56                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000000e56        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_exit.o)
                0x0000000000000e56                exit
                0x0000000000000e56                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000000e56        0x4 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_exit.o)
 *(.fini0)
                0x0000000000000e5a                _etext = .

.data           0x0000000000800200       0x16 load address 0x0000000000000e5a
                0x0000000000800200                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800200        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/crtm2560.o
 .data          0x0000000000800200        0x2 timer.o
                0x0000000000800200                frozen_time
 .data          0x0000000000800202        0x0 app.o
 .data          0x0000000000800202        0x0 ../buzzer/buzzer.o
 .data          0x0000000000800202        0x0 ../seven_segment/seven_segment.o
 .data          0x0000000000800202        0x0 ../custom_delay/custom_delay.o
 .data          0x0000000000800202        0x0 ../lcd/lcd.o
 .data          0x0000000000800202        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_udivmodhi4.o)
 .data          0x0000000000800202        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_divmodhi4.o)
 .data          0x0000000000800202        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_exit.o)
 .data          0x0000000000800202        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_copy_data.o)
 .data          0x0000000000800202        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_clear_bss.o)
 .data          0x0000000000800202        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libc.a(vsnprintf.o)
 .data          0x0000000000800202        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libc.a(vfprintf_std.o)
 .data          0x0000000000800202        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libc.a(strnlen_P.o)
 .data          0x0000000000800202        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libc.a(strnlen.o)
 .data          0x0000000000800202        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libc.a(fputc.o)
 .data          0x0000000000800202        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libc.a(ultoa_invert.o)
 *(.data*)
 *(.rodata)
 .rodata        0x0000000000800202        0x2 timer.o
                0x0000000000800202                FREEZE_TIME
 *(.rodata*)
 .rodata.str1.1
                0x0000000000800204       0x12 app.o
 *(.gnu.linkonce.d*)
                0x0000000000800216                . = ALIGN (0x2)
                0x0000000000800216                _edata = .
                0x0000000000800216                PROVIDE (__data_end, .)

.bss            0x0000000000800216       0x13
                0x0000000000800216                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800216        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/crtm2560.o
 .bss           0x0000000000800216        0x5 timer.o
                0x0000000000800216                all_delivered
                0x0000000000800217                callback_delay
                0x0000000000800219                time_count
 .bss           0x000000000080021b        0x0 app.o
 .bss           0x000000000080021b        0x0 ../buzzer/buzzer.o
 .bss           0x000000000080021b        0x0 ../seven_segment/seven_segment.o
 .bss           0x000000000080021b        0x0 ../custom_delay/custom_delay.o
 .bss           0x000000000080021b        0x0 ../lcd/lcd.o
 .bss           0x000000000080021b        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_udivmodhi4.o)
 .bss           0x000000000080021b        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_divmodhi4.o)
 .bss           0x000000000080021b        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_exit.o)
 .bss           0x000000000080021b        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_copy_data.o)
 .bss           0x000000000080021b        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_clear_bss.o)
 .bss           0x000000000080021b        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libc.a(vsnprintf.o)
 .bss           0x000000000080021b        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libc.a(vfprintf_std.o)
 .bss           0x000000000080021b        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libc.a(strnlen_P.o)
 .bss           0x000000000080021b        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libc.a(strnlen.o)
 .bss           0x000000000080021b        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libc.a(fputc.o)
 .bss           0x000000000080021b        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libc.a(ultoa_invert.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x000000000080021b        0x2 timer.o
                0x000000000080021b                callback
 COMMON         0x000000000080021d        0xc ../lcd/lcd.o
                0x000000000080021d                million
                0x000000000080021f                temp
                0x0000000000800221                tens
                0x0000000000800223                hundred
                0x0000000000800225                unit
                0x0000000000800227                thousand
                0x0000000000800229                PROVIDE (__bss_end, .)
                0x0000000000000e5a                __data_load_start = LOADADDR (.data)
                0x0000000000000e70                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800229        0x0
                0x0000000000800229                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0000000000800229                PROVIDE (__noinit_end, .)
                0x0000000000800229                _end = .
                0x0000000000800229                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab           0x0000000000000000     0x4a94
 *(.stab)
 .stab          0x0000000000000000      0x6e4 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/crtm2560.o
 .stab          0x00000000000006e4      0xaf8 timer.o
                                        0xb04 (size before relaxing)
 .stab          0x00000000000011dc      0x378 app.o
                                        0x540 (size before relaxing)
 .stab          0x0000000000001554      0x4f8 ../buzzer/buzzer.o
                                        0x6c0 (size before relaxing)
 .stab          0x0000000000001a4c      0x5e8 ../seven_segment/seven_segment.o
                                        0x7b0 (size before relaxing)
 .stab          0x0000000000002034      0x33c ../custom_delay/custom_delay.o
                                        0x504 (size before relaxing)
 .stab          0x0000000000002370      0xd38 ../lcd/lcd.o
                                        0xf54 (size before relaxing)
 .stab          0x00000000000030a8      0x540 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libc.a(vsnprintf.o)
                                        0x588 (size before relaxing)
 .stab          0x00000000000035e8      0xba0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libc.a(vfprintf_std.o)
                                        0xd80 (size before relaxing)
 .stab          0x0000000000004188       0x9c /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libc.a(strnlen_P.o)
                                         0xa8 (size before relaxing)
 .stab          0x0000000000004224       0x9c /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libc.a(strnlen.o)
                                         0xa8 (size before relaxing)
 .stab          0x00000000000042c0      0x354 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libc.a(fputc.o)
                                        0x534 (size before relaxing)
 .stab          0x0000000000004614      0x480 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libc.a(ultoa_invert.o)
                                        0x48c (size before relaxing)

.stabstr        0x0000000000000000     0x1a6f
 *(.stabstr)
 .stabstr       0x0000000000000000     0x1a6f /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/crtm2560.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 timer.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000000       0x12 app.o
 .comment       0x0000000000000000       0x12 ../buzzer/buzzer.o
 .comment       0x0000000000000000       0x12 ../seven_segment/seven_segment.o
 .comment       0x0000000000000000       0x12 ../custom_delay/custom_delay.o
 .comment       0x0000000000000000       0x12 ../lcd/lcd.o
 .comment       0x0000000000000000       0x12 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libc.a(vsnprintf.o)
 .comment       0x0000000000000000       0x12 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libc.a(vfprintf_std.o)
 .comment       0x0000000000000000       0x12 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libc.a(fputc.o)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(app.out elf32-avr)
LOAD linker stubs
