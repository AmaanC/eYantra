Archive member included because of file (symbol)

/usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr6/libgcc.a(_exit.o)
                              /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/../../../../avr/lib/avr6/crtm2560.o (exit)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00100000         xr
data             0x00800200         0x0000fe00         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
user_signatures  0x00850000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .data set to 0x800200
LOAD /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/../../../../avr/lib/avr6/crtm2560.o
LOAD timer.o
LOAD app.o
LOAD ../buzzer/buzzer.o
START GROUP
LOAD /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr6/libgcc.a
LOAD /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/../../../../avr/lib/avr6/libm.a
LOAD /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/../../../../avr/lib/avr6/libc.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x226
 *(.vectors)
 .vectors       0x00000000       0xe4 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/../../../../avr/lib/avr6/crtm2560.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
                0x000000e4                . = ALIGN (0x2)
                0x000000e4                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x000000e4        0x0 linker stubs
 *(.trampolines*)
                0x000000e4                __trampolines_end = .
 *(.progmem*)
                0x000000e4                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x000000e4                __ctors_start = .
 *(.ctors)
                0x000000e4                __ctors_end = .
                0x000000e4                __dtors_start = .
 *(.dtors)
                0x000000e4                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x000000e4        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/../../../../avr/lib/avr6/crtm2560.o
                0x000000e4                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x000000e4       0x10 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/../../../../avr/lib/avr6/crtm2560.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000000f4        0x8 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/../../../../avr/lib/avr6/crtm2560.o
 *(.init9)
 *(.text)
 .text          0x000000fc        0x4 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/../../../../avr/lib/avr6/crtm2560.o
                0x000000fc                __vector_42
                0x000000fc                __vector_22
                0x000000fc                __vector_28
                0x000000fc                __vector_1
                0x000000fc                __vector_32
                0x000000fc                __vector_34
                0x000000fc                __vector_24
                0x000000fc                __vector_12
                0x000000fc                __vector_55
                0x000000fc                __vector_46
                0x000000fc                __bad_interrupt
                0x000000fc                __vector_6
                0x000000fc                __vector_31
                0x000000fc                __vector_35
                0x000000fc                __vector_39
                0x000000fc                __vector_3
                0x000000fc                __vector_23
                0x000000fc                __vector_30
                0x000000fc                __vector_25
                0x000000fc                __vector_11
                0x000000fc                __vector_54
                0x000000fc                __vector_13
                0x000000fc                __vector_17
                0x000000fc                __vector_19
                0x000000fc                __vector_56
                0x000000fc                __vector_7
                0x000000fc                __vector_49
                0x000000fc                __vector_41
                0x000000fc                __vector_43
                0x000000fc                __vector_27
                0x000000fc                __vector_5
                0x000000fc                __vector_33
                0x000000fc                __vector_47
                0x000000fc                __vector_52
                0x000000fc                __vector_37
                0x000000fc                __vector_4
                0x000000fc                __vector_44
                0x000000fc                __vector_51
                0x000000fc                __vector_9
                0x000000fc                __vector_2
                0x000000fc                __vector_21
                0x000000fc                __vector_15
                0x000000fc                __vector_36
                0x000000fc                __vector_29
                0x000000fc                __vector_40
                0x000000fc                __vector_8
                0x000000fc                __vector_26
                0x000000fc                __vector_48
                0x000000fc                __vector_14
                0x000000fc                __vector_53
                0x000000fc                __vector_10
                0x000000fc                __vector_50
                0x000000fc                __vector_16
                0x000000fc                __vector_18
                0x000000fc                __vector_20
                0x000000fc                __vector_38
 .text          0x00000100       0xac timer.o
                0x00000100                TimerTimer4Init
                0x00000140                __vector_45
                0x0000019c                TimerInitDevices
 .text          0x000001ac       0x2e app.o
                0x000001ac                Timer1sMagic
 .text          0x000001da       0x42 ../buzzer/buzzer.o
                0x000001da                buzzer_pin_config
                0x000001e0                buzzer_port_init
                0x000001e4                buzzer_on
                0x000001ec                buzzer_off
                0x000001f4                buzzer_beep
                0x00000212                buzzer_init_devices
 .text          0x0000021c        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr6/libgcc.a(_exit.o)
                0x0000021c                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x0000021c        0x6 app.o
                0x0000021c                main
 .text.libgcc.mul
                0x00000222        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr6/libgcc.a(_exit.o)
 .text.libgcc.div
                0x00000222        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr6/libgcc.a(_exit.o)
 .text.libgcc   0x00000222        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr6/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x00000222        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr6/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x00000222        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr6/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x00000222        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr6/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x00000222        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr6/libgcc.a(_exit.o)
                0x00000222                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000222        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr6/libgcc.a(_exit.o)
                0x00000222                exit
                0x00000222                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000222        0x4 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr6/libgcc.a(_exit.o)
 *(.fini0)
                0x00000226                _etext = .

.data           0x00800200        0x0 load address 0x00000226
                0x00800200                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800200        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/../../../../avr/lib/avr6/crtm2560.o
 .data          0x00800200        0x0 timer.o
 .data          0x00800200        0x0 app.o
 .data          0x00800200        0x0 ../buzzer/buzzer.o
 .data          0x00800200        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr6/libgcc.a(_exit.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800200                . = ALIGN (0x2)
                0x00800200                _edata = .
                0x00800200                PROVIDE (__data_end, .)

.bss            0x00800200        0x0
                0x00800200                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800200        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/../../../../avr/lib/avr6/crtm2560.o
 .bss           0x00800200        0x0 timer.o
 .bss           0x00800200        0x0 app.o
 .bss           0x00800200        0x0 ../buzzer/buzzer.o
 .bss           0x00800200        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr6/libgcc.a(_exit.o)
 *(.bss*)
 *(COMMON)
                0x00800200                PROVIDE (__bss_end, .)
                0x00000226                __data_load_start = LOADADDR (.data)
                0x00000226                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800200        0x0
                0x00800200                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800200                PROVIDE (__noinit_end, .)
                0x00800200                _end = .
                0x00800200                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x00000000       0x11
 *(.comment)
 .comment       0x00000000       0x11 timer.o
                                 0x12 (size before relaxing)
 .comment       0x00000000       0x12 app.o
 .comment       0x00000000       0x12 ../buzzer/buzzer.o

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000       0x88
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x20 timer.o
 .debug_aranges
                0x00000020       0x28 app.o
 .debug_aranges
                0x00000048       0x20 ../buzzer/buzzer.o
 .debug_aranges
                0x00000068       0x20 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr6/libgcc.a(_exit.o)

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x00000000      0x509
 *(.debug_info)
 .debug_info    0x00000000       0xd0 timer.o
 .debug_info    0x000000d0      0x1ce app.o
 .debug_info    0x0000029e      0x1ad ../buzzer/buzzer.o
 .debug_info    0x0000044b       0xbe /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr6/libgcc.a(_exit.o)
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x00000000      0x2ed
 *(.debug_abbrev)
 .debug_abbrev  0x00000000       0x9e timer.o
 .debug_abbrev  0x0000009e      0x110 app.o
 .debug_abbrev  0x000001ae      0x12b ../buzzer/buzzer.o
 .debug_abbrev  0x000002d9       0x14 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr6/libgcc.a(_exit.o)

.debug_line     0x00000000      0x26d
 *(.debug_line)
 .debug_line    0x00000000       0x93 timer.o
 .debug_line    0x00000093       0xd6 app.o
 .debug_line    0x00000169       0xac ../buzzer/buzzer.o
 .debug_line    0x00000215       0x58 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr6/libgcc.a(_exit.o)

.debug_frame    0x00000000      0x140
 *(.debug_frame)
 .debug_frame   0x00000000       0x8c timer.o
 .debug_frame   0x0000008c       0x34 app.o
 .debug_frame   0x000000c0       0x80 ../buzzer/buzzer.o

.debug_str      0x00000000      0x1d8
 *(.debug_str)
 .debug_str     0x00000000       0xca timer.o
                                 0xfe (size before relaxing)
 .debug_str     0x000000ca       0x69 app.o
                                0x13b (size before relaxing)
 .debug_str     0x00000133       0xa5 ../buzzer/buzzer.o
                                0x138 (size before relaxing)

.debug_loc      0x00000000      0x17e
 *(.debug_loc)
 .debug_loc     0x00000000       0xcb timer.o
 .debug_loc     0x000000cb       0xb3 ../buzzer/buzzer.o

.debug_macinfo
 *(.debug_macinfo)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges   0x00000000       0x18
 *(.debug_ranges)
 .debug_ranges  0x00000000       0x18 app.o

.debug_macro
 *(.debug_macro)
OUTPUT(app.out elf32-avr)
LOAD linker stubs
