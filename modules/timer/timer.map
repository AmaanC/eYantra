Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_divmodhi4.o)
                              ../seven_segment/seven_segment.o (__divmodhi4)
/usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/crtm2560.o (exit)
/usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_copy_data.o)
                              timer.o (__do_copy_data)
/usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_clear_bss.o)
                              timer.o (__do_clear_bss)
/usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_udivmodhi4.o)
                              /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_divmodhi4.o) (__udivmodhi4)

Allocating common symbols
Common symbol       size              file

callback            0x2               timer.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000100000 xr
data             0x0000000000800200 0x000000000000fe00 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800200
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/crtm2560.o
LOAD timer.o
LOAD app.o
LOAD ../buzzer/buzzer.o
LOAD ../seven_segment/seven_segment.o
LOAD ../custom_delay/custom_delay.o
START GROUP
LOAD /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libm.a
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/libc.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x496
 *(.vectors)
 .vectors       0x0000000000000000       0xe4 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/crtm2560.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000000000000e4                . = ALIGN (0x2)
                0x00000000000000e4                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000000000000e4        0x4 linker stubs
 *(.trampolines*)
                0x00000000000000e8                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000000000000e8                __ctors_start = .
 *(.ctors)
                0x00000000000000e8                __ctors_end = .
                0x00000000000000e8                __dtors_start = .
 *(.dtors)
                0x00000000000000e8                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000000000000e8        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/crtm2560.o
                0x00000000000000e8                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000000000000e8       0x10 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/crtm2560.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000000000000f8       0x1a /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_copy_data.o)
                0x00000000000000f8                __do_copy_data
 .init4         0x0000000000000112       0x10 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_clear_bss.o)
                0x0000000000000112                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000000122        0x8 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/crtm2560.o
 *(.init9)
 *(.text)
 .text          0x000000000000012a        0x4 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/crtm2560.o
                0x000000000000012a                __vector_38
                0x000000000000012a                __vector_22
                0x000000000000012a                __vector_28
                0x000000000000012a                __vector_1
                0x000000000000012a                __vector_32
                0x000000000000012a                __vector_34
                0x000000000000012a                __vector_24
                0x000000000000012a                __vector_12
                0x000000000000012a                __vector_55
                0x000000000000012a                __vector_46
                0x000000000000012a                __bad_interrupt
                0x000000000000012a                __vector_6
                0x000000000000012a                __vector_31
                0x000000000000012a                __vector_35
                0x000000000000012a                __vector_39
                0x000000000000012a                __vector_3
                0x000000000000012a                __vector_23
                0x000000000000012a                __vector_30
                0x000000000000012a                __vector_25
                0x000000000000012a                __vector_11
                0x000000000000012a                __vector_54
                0x000000000000012a                __vector_13
                0x000000000000012a                __vector_17
                0x000000000000012a                __vector_19
                0x000000000000012a                __vector_56
                0x000000000000012a                __vector_7
                0x000000000000012a                __vector_49
                0x000000000000012a                __vector_41
                0x000000000000012a                __vector_43
                0x000000000000012a                __vector_27
                0x000000000000012a                __vector_5
                0x000000000000012a                __vector_33
                0x000000000000012a                __vector_47
                0x000000000000012a                __vector_52
                0x000000000000012a                __vector_37
                0x000000000000012a                __vector_4
                0x000000000000012a                __vector_44
                0x000000000000012a                __vector_51
                0x000000000000012a                __vector_9
                0x000000000000012a                __vector_2
                0x000000000000012a                __vector_21
                0x000000000000012a                __vector_15
                0x000000000000012a                __vector_36
                0x000000000000012a                __vector_29
                0x000000000000012a                __vector_40
                0x000000000000012a                __vector_8
                0x000000000000012a                __vector_26
                0x000000000000012a                __vector_48
                0x000000000000012a                __vector_14
                0x000000000000012a                __vector_53
                0x000000000000012a                __vector_10
                0x000000000000012a                __vector_50
                0x000000000000012a                __vector_16
                0x000000000000012a                __vector_18
                0x000000000000012a                __vector_20
                0x000000000000012a                __vector_42
 .text          0x000000000000012e      0x160 timer.o
                0x000000000000012e                Timer4Init
                0x000000000000016e                UpdateDisplay
                0x0000000000000190                __vector_45
                0x000000000000022e                VictoryTime
                0x0000000000000236                FreezeDisplay
                0x0000000000000248                RegisterCallback
                0x000000000000026a                GetCurrentTime
                0x0000000000000274                ResetTime
                0x000000000000027e                InitTimer
 .text          0x000000000000028e        0x0 app.o
 .text          0x000000000000028e       0x42 ../buzzer/buzzer.o
                0x000000000000028e                BuzzerPinConfig
                0x0000000000000294                BuzzerPortInit
                0x0000000000000298                BuzzerOn
                0x00000000000002a0                BuzzerOff
                0x00000000000002a8                BuzzerBeep
                0x00000000000002c6                BuzzerInitDevices
 .text          0x00000000000002d0      0x130 ../seven_segment/seven_segment.o
                0x00000000000002d0                SevenSegmentPinConfig
                0x00000000000002e2                SevenPortInit
                0x00000000000002e6                SevenInitDevices
                0x00000000000002f0                SevenConvertToHex
                0x0000000000000380                SevenDisplayNum
 .text          0x0000000000000400       0x16 ../custom_delay/custom_delay.o
                0x0000000000000400                CustomDelay
 .text          0x0000000000000416        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_divmodhi4.o)
 .text          0x0000000000000416        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_exit.o)
 .text          0x0000000000000416        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_copy_data.o)
 .text          0x0000000000000416        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_clear_bss.o)
 .text          0x0000000000000416        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_udivmodhi4.o)
                0x0000000000000416                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x0000000000000416       0x2c app.o
                0x0000000000000416                main
 .text.libgcc.mul
                0x0000000000000442        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_divmodhi4.o)
 .text.libgcc.div
                0x0000000000000442       0x28 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_divmodhi4.o)
                0x0000000000000442                __divmodhi4
                0x0000000000000442                _div
 .text.libgcc   0x000000000000046a        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_divmodhi4.o)
 .text.libgcc.prologue
                0x000000000000046a        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_divmodhi4.o)
 .text.libgcc.builtins
                0x000000000000046a        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_divmodhi4.o)
 .text.libgcc.fmul
                0x000000000000046a        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_divmodhi4.o)
 .text.libgcc.fixed
                0x000000000000046a        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_divmodhi4.o)
 .text.libgcc.mul
                0x000000000000046a        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_exit.o)
 .text.libgcc.div
                0x000000000000046a        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_exit.o)
 .text.libgcc   0x000000000000046a        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x000000000000046a        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x000000000000046a        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x000000000000046a        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x000000000000046a        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x000000000000046a        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x000000000000046a        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_copy_data.o)
 .text.libgcc   0x000000000000046a        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x000000000000046a        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x000000000000046a        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x000000000000046a        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x000000000000046a        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x000000000000046a        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x000000000000046a        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_clear_bss.o)
 .text.libgcc   0x000000000000046a        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x000000000000046a        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x000000000000046a        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x000000000000046a        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x000000000000046a        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_clear_bss.o)
 .text.libgcc.mul
                0x000000000000046a        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_udivmodhi4.o)
 .text.libgcc.div
                0x000000000000046a       0x28 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_udivmodhi4.o)
                0x000000000000046a                __udivmodhi4
 .text.libgcc   0x0000000000000492        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_udivmodhi4.o)
 .text.libgcc.prologue
                0x0000000000000492        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_udivmodhi4.o)
 .text.libgcc.builtins
                0x0000000000000492        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_udivmodhi4.o)
 .text.libgcc.fmul
                0x0000000000000492        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_udivmodhi4.o)
 .text.libgcc.fixed
                0x0000000000000492        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_udivmodhi4.o)
                0x0000000000000492                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000000492        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_exit.o)
                0x0000000000000492                exit
                0x0000000000000492                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000000492        0x4 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_exit.o)
 *(.fini0)
                0x0000000000000496                _etext = .

.data           0x0000000000800200        0x4 load address 0x0000000000000496
                0x0000000000800200                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800200        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/crtm2560.o
 .data          0x0000000000800200        0x2 timer.o
                0x0000000000800200                frozen_time
 .data          0x0000000000800202        0x0 app.o
 .data          0x0000000000800202        0x0 ../buzzer/buzzer.o
 .data          0x0000000000800202        0x0 ../seven_segment/seven_segment.o
 .data          0x0000000000800202        0x0 ../custom_delay/custom_delay.o
 .data          0x0000000000800202        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_divmodhi4.o)
 .data          0x0000000000800202        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_exit.o)
 .data          0x0000000000800202        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_copy_data.o)
 .data          0x0000000000800202        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_clear_bss.o)
 .data          0x0000000000800202        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_udivmodhi4.o)
 *(.data*)
 *(.rodata)
 .rodata        0x0000000000800202        0x2 timer.o
                0x0000000000800202                FREEZE_TIME
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800204                . = ALIGN (0x2)
                0x0000000000800204                _edata = .
                0x0000000000800204                PROVIDE (__data_end, .)

.bss            0x0000000000800204        0x7
                0x0000000000800204                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800204        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/crtm2560.o
 .bss           0x0000000000800204        0x5 timer.o
                0x0000000000800204                all_delivered
                0x0000000000800205                callback_delay
                0x0000000000800207                time_count
 .bss           0x0000000000800209        0x0 app.o
 .bss           0x0000000000800209        0x0 ../buzzer/buzzer.o
 .bss           0x0000000000800209        0x0 ../seven_segment/seven_segment.o
 .bss           0x0000000000800209        0x0 ../custom_delay/custom_delay.o
 .bss           0x0000000000800209        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_divmodhi4.o)
 .bss           0x0000000000800209        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_exit.o)
 .bss           0x0000000000800209        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_copy_data.o)
 .bss           0x0000000000800209        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_clear_bss.o)
 .bss           0x0000000000800209        0x0 /usr/lib/gcc/avr/4.8.2/avr6/libgcc.a(_udivmodhi4.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x0000000000800209        0x2 timer.o
                0x0000000000800209                callback
                0x000000000080020b                PROVIDE (__bss_end, .)
                0x0000000000000496                __data_load_start = LOADADDR (.data)
                0x000000000000049a                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x000000000080020b        0x0
                0x000000000080020b                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x000000000080020b                PROVIDE (__noinit_end, .)
                0x000000000080020b                _end = .
                0x000000000080020b                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab           0x0000000000000000     0x2178
 *(.stab)
 .stab          0x0000000000000000      0x6e4 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/crtm2560.o
 .stab          0x00000000000006e4      0x93c timer.o
                                        0x948 (size before relaxing)
 .stab          0x0000000000001020      0x33c app.o
                                        0x504 (size before relaxing)
 .stab          0x000000000000135c      0x4f8 ../buzzer/buzzer.o
                                        0x6c0 (size before relaxing)
 .stab          0x0000000000001854      0x5e8 ../seven_segment/seven_segment.o
                                        0x7b0 (size before relaxing)
 .stab          0x0000000000001e3c      0x33c ../custom_delay/custom_delay.o
                                        0x504 (size before relaxing)

.stabstr        0x0000000000000000     0x114e
 *(.stabstr)
 .stabstr       0x0000000000000000     0x114e /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr6/crtm2560.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 timer.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000000       0x12 app.o
 .comment       0x0000000000000000       0x12 ../buzzer/buzzer.o
 .comment       0x0000000000000000       0x12 ../seven_segment/seven_segment.o
 .comment       0x0000000000000000       0x12 ../custom_delay/custom_delay.o

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(app.out elf32-avr)
LOAD linker stubs
